// This code is generated by GPT-3.5

const nameInput = document.querySelector("#name");
const titleInput = document.querySelector("#title");
const reviewInput = document.querySelector("#review");
const stars = document.querySelectorAll(".star");
const reviewCont = document.querySelector(".reviewInnerCont");
const submitButton = document.querySelector("#submit");
const starBox = document.querySelector(".starBox");
let starNo = 0;
let prev = 0;

// Submit Review
submitButton.addEventListener("click", () => {
    const name = nameInput.value.trim();
    const title = titleInput.value.trim();
    const review = reviewInput.value.trim();

    if (!name || !title || !review || starNo === 0) {
        alert("Please fill all values");
        return;
    }

    createReview(name, title, review, starNo);
    document.querySelector("form").reset(); // Reset the form
    emptyStars();
    starNo = 0;
});

// Handle Star Clicks using Event Delegation
starBox.addEventListener("click", (event) => {
    const selectedStar = event.target.closest(".star");
    if (!selectedStar) return;

    starNo = Number(selectedStar.dataset.star); // Use data attribute instead of slicing
    if (starNo === prev) {
        emptyStars();
        prev = 0;
    } else {
        highlightStars(starNo);
        prev = starNo;
    }
});

// Function to create a review card
function createReview(name, title, review, rating) {
    const reviewHTML = `
        <div>
            <h3>${title}</h3>
            <div style="color: yellow;">
                ${"★".repeat(rating)}<span style="color: transparent; -webkit-text-stroke: 1px black;">${"★".repeat(5 - rating)}</span>
            </div>
            <p>${review}</p>
            <div>~Name: ${name}</div>
        </div>
    `;
    reviewCont.insertAdjacentHTML("afterbegin", reviewHTML);
}

// Function to clear star selection
function emptyStars() {
    stars.forEach(star => (star.style.color = "white"));
}

// Function to highlight stars up to the selected number
function highlightStars(count) {
    emptyStars();
    for (let i = 0; i < count; i++) {
        stars[i].style.color = "yellow";
    }
}
